/*
 * Copyright (c) 2016, nwillc@gmail.com
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

buildscript {
    repositories {
        maven { url 'http://jcenter.bintray.com' }
        maven {
            url 'https://maven.eveoh.nl/content/repositories/releases'
        }
    }
    dependencies {
        classpath 'gradle.plugin.com.github.nwillc:buildinfo:0.1.2',
                'au.com.ish.gradle:release:2.2.2',
                'org.tmatesoft.sqljet:sqljet:1.1.9',
                'io.ratpack:ratpack-gradle:' + ratpack_version,
                'org.junit.platform:junit-platform-gradle-plugin:' + junit_plugin_version
    }
}

plugins {
    id 'java'
    id 'com.github.nwillc.vplugin' version '2.0.1'
    id 'com.github.nwillc.buildinfo' version '0.1.2'
    id 'nebula.lint' version '7.3.5'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

repositories {
    maven { url 'http://jcenter.bintray.com' }
}

dependencies {
    compile 'com.github.nwillc:opa:' + opa_version,
            'io.ratpack:ratpack-exec:' + ratpack_version,
            'io.ratpack:ratpack-session:' + ratpack_version,
            'io.ratpack:ratpack-guice:' + ratpack_version,
            'net.sf.jopt-simple:jopt-simple:6.0-alpha-1',
            'com.fasterxml.jackson.core:jackson-core:' + jackson_fasterxml_version,
            'com.fasterxml.jackson.core:jackson-databind:' + jackson_fasterxml_version,
            'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:' + jackson_fasterxml_version,
            'com.fasterxml.jackson.core:jackson-annotations:' + jackson_fasterxml_version,
            'com.google.http-client:google-http-client-jackson2:1.22.0',
            'com.google.http-client:google-http-client:1.22.0',
            'com.google.inject:guice:4.1.0',
            'com.graphql-java:graphql-java-annotations:0.13.1',
            'com.graphql-java:graphql-java:2.2.0',
            'com.groupon:locality-uuid:1.1.1',
            'javax.validation:validation-api:' + javax_validation_version,
            'org.mongodb:mongo-java-driver:' + mongo_driver_version,
            'org.tinylog:tinylog:' + tiny_log_version,
            'com.github.nwillc:reloader:' + reloader_version

    compile ('com.google.api-client:google-api-client:1.22.0') {
        exclude group: 'com.google.guava' , module: 'guava-jdk5'
    }

    runtime 'org.tinylog:slf4j-binding:' + slf4j_version

    testCompile 'org.jmockit:jmockit:1.31',
            'com.github.fakemongo:fongo:2.0.6',
            'junit:junit:4.12',
            'org.assertj:assertj-core:' + assertj_version
    testCompile('com.github.nwillc:opa-impl-tests:' + opa_impl_tests_version) {
        exclude group: 'com.github.nwillc', module: 'opa'
        exclude group: 'junit'
        exclude group: 'org.assertj'
    }
    testCompile('com.github.nwillc:jdk_contract_tests:' + jdk_contract_tests_version) {
        exclude group: 'junit'
        exclude group: 'org.assertj'
        exclude group: 'org.junit.jupiter'
    }
    
}

configurations {
    compile.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    all*.exclude group: 'org.antlr', module: 'antlr4-runtime'
}

apply plugin: 'io.ratpack.ratpack-java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'release'
apply plugin: 'jacoco'
apply plugin: 'pmd'
apply plugin: 'com.github.nwillc.vplugin'

group = 'com.github.nwillc'
version = '2.8.2-SNAPSHOT'
targetCompatibility = '1.8'
sourceCompatibility = '1.8'
mainClassName = 'com.github.nwillc.mysnipserver.RatPackApp'

gradleLint.rules = ['archaic-wrapper', 'all-dependency', 'overridden-dependency-version']

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs += ['-Xlint:unchecked']
    }
}

test {
    maxParallelForks 4

    beforeTest { descriptor ->
        logger.lifecycle('\tRunning ' + descriptor.className + '.' + descriptor.name)
    }

    afterSuite { descriptor, result ->
        if (descriptor.parent == null) {
            logger.lifecycle('\tTests run: ' + result.testCount
                    + ', Failures: ' + result.failedTestCount
                    + ', Skipped: ' + result.skippedTestCount)
        }
    }

    testLogging {
        exceptionFormat 'full'
    }
}

processResources.dependsOn buildInfo

release {
    failOnSnapshotDependencies = true
    allowLocalModifications = true
    releaseDryRun = false
    scm = 'git'
}

shadowJar {
    dependsOn build
    baseName = 'mysnipserver-' + project.version + '-standalone'
    classifier = null
    version = null
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
        csv.enabled false
    }
}

pmd {
    toolVersion = '4.3'
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    ruleSets = [
            'basic',
            'braces',
            'naming',
            'clone',
            'codesize',
            'controversial',
            'design',
            'finalizers',
            'imports',
            'junit',
            'logging-java',
            'migrating',
            'optimizations',
            'strictexception',
            'strings',
            'sunsecure',
            'typeresolution',
            'unusedcode'
    ]
}

run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}